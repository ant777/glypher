{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,ECAA,IAAM,EAAa,mBAGnB,IAAI,EAAc,EAAE,CACpB,KAAK,gBAAgB,CAAC,UAAW,SAAU,CAAK,EAE5C,EAAM,SAAS,CAAC,OAAO,IAAI,CAAC,GACvB,IAAI,CAAC,SAAU,CAAK,EAEjB,OADA,QAAQ,GAAG,CAAC,gBACL,EAAM,MAAM,CAAC,GAAa,IAAI,CAAC,WAClC,YAAc,CAAA,EACd,QAAQ,GAAG,CAAC,8CAChB,EAEJ,GAAG,IAAI,CAAC,WAKJ,OAAO,KAAK,WAAW,EAC3B,GACR,GACA,KAAK,gBAAgB,CAAC,WAAY,SAAU,CAAK,EAE7C,IAAI,EAAiB,CAAC,EAAW,CACjC,EAAM,SAAS,CAAC,OAAO,IAAI,GAAG,IAAI,CAAC,SAAU,CAAU,EACnD,OAAO,QAAQ,GAAG,CAAC,EAAW,GAAG,CAAC,SAAU,CAAS,EACjD,GAAI,AAAsC,KAAtC,EAAe,OAAO,CAAC,GACvB,OAAO,OAAO,MAAM,CAAC,EAE7B,GACJ,GACJ,GAGA,KAAK,gBAAgB,CAAC,QAAS,SAAU,CAAK,EAC1C,GAAI,AAAyB,QAAzB,EAAM,OAAO,CAAC,MAAM,CAAY,OACpC,IAAM,EAAM,IAAI,IAAI,EAAM,OAAO,CAAC,GAAG,EAEjC,EAAW,AADD,EAAI,QAAQ,CAAC,KAAK,CAAC,KACZ,EAAE,CAAC,GACpB,AAAY,CAAA,eAAZ,EACF,EAAM,WAAW,CAAC,iBAChB,QAAQ,IAAI,CAAC,GACb,IAAM,EAAM,MAAM,MAAM,IAAI,QAAQ,kBAC9B,EAAS,MAAM,EAAI,IAAI,GACzB,EAAW,GAkDf,OAjDA,QAAQ,IAAI,CAAC,GACb,EAAO,GAAG,CAAC,AAAC,IACR,IAAM,EAAQ,EAAW,KAAK,AAC3B,CAAA,EAAW,SAAS,EACnB,CAAA,GAAY,GAAY,UAAU,IAAI,AAAC,IACnC,GAAG,CAAC,EAAG,IAAI,CAAC,QAAQ,CAAC,KAAM,MAAO,GAClC,GAAI,EAAM,MAAM,CAAG,EACf,OAAO,EAAM,GAAG,CAAC,AAAC,IACd,IAAM,EAAW,EAAK,IAAI,CACtB,EAAK,EACL,CAAA,CAAA,EAAS,QAAQ,CAAC,cAAgB,EAAS,QAAQ,CAAC,YAAA,GACpD,CAAA,EAAK,CAAC,wBAAwB,EAAE,EAAS,GAAG,CAAC,AAAD,EAEhD,IAAI,EAAM,EAAG,MAAM,CAAC,EAAK,MAAM,CAAC,AAC7B,AAAU,MAAA,IAAV,EAAI,CAAC,CACJ,EAAM,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,AAAM,IAAN,EAAI,CAAC,EAAM,CAAC,EAAE,KAAK,KAAK,CAAC,AAAM,IAAN,EAAI,CAAC,EAAM,CAAC,EAAE,KAAK,KAAK,CAAC,AAAM,IAAN,EAAI,CAAC,EAAM,CAAC,EAAE,EAAI,CAAC,CAAC,CAAC,CAAC,CAElG,AAAe,UAAf,OAAO,GACN,CAAA,GAAO,IADX,EAGA,IAAI,EAAW,EAAG,IAAI,CAAC,OAAO,CAAC,MAAO,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,CAIxD,OAHI,AAAyB,KAAzB,EAAS,OAAO,CAAC,MACjB,CAAA,EAAW,EAAS,MAAM,CAAC,EAAS,WAAW,CAAC,KAAK,EADzD,EAGO;AAAC,CAAG,EAAE,EAAA,EAAK,EAAS;AACvB,gCAAA,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAI;AACnC,6BAAA,EAAE,EAAI,IAAI,GAAA,CAAI,AAEnB,GAAG,IAAI,CAAC,GACL,EAEH,IAAI,EAAM,OAAO,MAAM,CAAC,EAAG,MAAM,CAAC,CAAC,EAAE,AAClC,AAAU,MAAA,IAAV,EAAI,CAAC,CACJ,EAAM,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,AAAM,IAAN,EAAI,CAAC,EAAM,CAAC,EAAE,KAAK,KAAK,CAAC,AAAM,IAAN,EAAI,CAAC,EAAM,CAAC,EAAE,KAAK,KAAK,CAAC,AAAM,IAAN,EAAI,CAAC,EAAM,CAAC,EAAE,EAAI,CAAC,CAAC,CAAC,CAAC,CAElG,AAAe,UAAf,OAAO,GACN,CAAA,GAAO,IADX,EAGI,IAAI,EAAW,EAAG,IAAI,CAAC,OAAO,CAAC,MAAO,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,CAI5D,OAHQ,AAAyB,KAAzB,EAAS,OAAO,CAAC,MACjB,CAAA,EAAW,EAAS,MAAM,CAAC,EAAS,WAAW,CAAC,KAAK,EADzD,EAGG;AAAC,CAAG,EAAE,EAAS;AAClB,4BAAA,EAAE,EAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAI;AACnC,yBAAA,CAAC,AACN,CACJ,GAAG,KAAK,GAAR,CAER,GACO,IAAI,SAAS,EAAU,CAC1B,QAAS,IAAI,QAAQ,CACjB,eAAgB,yBACpB,EACJ,EACH,KAGA,EAAM,WAAW,CACV,OAAO,KAAK,CAAC,EAAM,OAAO,CAAE,CAAC,aAAc,CAAA,CAAI,GAC1C,IAAI,CAAC,SAAU,CAAQ,SAEhB,AAAI,IAGA,AAAiD,KAAjD,EAAI,QAAQ,CAAC,OAAO,CAAC,yBAAkC,AAA2C,KAA3C,EAAI,QAAQ,CAAC,OAAO,CAAC,kBAErE,MAAM,IAAI,QAAQ,EAAM,OAAO,CAAE,CAAC,YAAa,OAAQ,KAAM,MAAM,IAEvE,MAAM,EAAM,OAAO,EAC9B,GAKhB,E,G,E","sources":["<anon>","src/service-worker.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirebdb8\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirebdb8\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"4pGFC\", function(module, exports) {\nconst $336a98a23954290e$var$CACHE_NAME = 'glypher-cache-81';\nconst $336a98a23954290e$var$version = '1.0.1';\nvar $336a98a23954290e$var$urlsToCache = [];\nself.addEventListener('install', function(event) {\n    // Perform install steps\n    event.waitUntil(caches.open($336a98a23954290e$var$CACHE_NAME).then(function(cache) {\n        console.log('Opened cache');\n        return cache.addAll($336a98a23954290e$var$urlsToCache).then(function() {\n            __hasUpdate = true;\n            console.log('All resources have been fetched and cached.');\n        });\n    }).then(function() {\n        // `skipWaiting()` forces the waiting ServiceWorker to become the\n        // active ServiceWorker, triggering the `onactivate` event.\n        // Together with `Clients.claim()` this allows a worker to take effect\n        // immediately in the client(s).\n        return self.skipWaiting();\n    }));\n});\nself.addEventListener('activate', function(event) {\n    var cacheWhitelist = [\n        $336a98a23954290e$var$CACHE_NAME\n    ];\n    event.waitUntil(caches.keys().then(function(cacheNames) {\n        return Promise.all(cacheNames.map(function(cacheName) {\n            if (cacheWhitelist.indexOf(cacheName) === -1) return caches.delete(cacheName);\n        }));\n    }));\n});\nself.addEventListener('fetch', function(event) {\n    if (event.request.method !== 'GET') return;\n    const url = new URL(event.request.url);\n    const parts = url.pathname.split('/');\n    let fileName = parts.at(-1);\n    if (fileName === 'custom.css') event.respondWith(async function() {\n        console.warn(fileName);\n        const res = await fetch(new Request('./custom.json'));\n        const output = await res.json();\n        let response = '';\n        console.warn(output);\n        output.map((collection)=>{\n            const modes = collection.modes;\n            if (collection.variables) response += collection?.variables.map((it)=>{\n                if (!it.name.includes('|')) return '';\n                if (modes.length > 1) return modes.map((mode)=>{\n                    const modeName = mode.name;\n                    let mq = '';\n                    if (modeName.includes('max-width') || modeName.includes('min-width')) mq = `@media only screen and (${modeName}) {`;\n                    let val = it.values[mode.modeId];\n                    if (val.r !== undefined) val = `rgba(${Math.round(val.r * 255)},${Math.round(val.g * 255)},${Math.round(val.b * 255)},${val.a})`;\n                    else if (typeof val !== 'string') val += 'px';\n                    let selector = it.name.replace(/\\*/g, '.').split('|')[0];\n                    if (selector.indexOf('/') !== -1) selector = selector.substr(selector.lastIndexOf('/') + 1);\n                    return `\\n ${mq}${selector} {\n                                ${it.name.split('|')[1]}: ${val} !important;\n                            }${mq ? '}' : ''}`;\n                }).join('');\n                else {\n                    let val = Object.values(it.values)[0];\n                    if (val.r !== undefined) val = `rgba(${Math.round(val.r * 255)},${Math.round(val.g * 255)},${Math.round(val.b * 255)},${val.a})`;\n                    else if (typeof val !== 'string') val += 'px';\n                    let selector = it.name.replace(/\\*/g, '.').split('|')[0];\n                    if (selector.indexOf('/') !== -1) selector = selector.substr(selector.lastIndexOf('/') + 1);\n                    return `\\n ${selector} {\n                            ${it.name.split('|')[1]}: ${val} !important;\n                        }`;\n                }\n            }).join('');\n        });\n        return new Response(response, {\n            headers: new Headers({\n                'Content-Type': 'text/css; charset=utf-8'\n            })\n        });\n    }());\n    else event.respondWith(caches.match(event.request, {\n        ignoreSearch: true\n    }).then(function(response) {\n        // Cache hit - return response\n        if (response) return response;\n        if (url.pathname.indexOf('worker-javascript.js') !== -1 || url.pathname.indexOf('worker-html.js') !== -1) // request = new Request(request, {credentials: 'omit'});\n        return fetch(new Request(event.request, {\n            credentials: 'omit',\n            mode: 'cors'\n        }));\n        return fetch(event.request);\n    }));\n    return;\n});\n\n});\n\n\nparcelRequire(\"4pGFC\");\n\n//# sourceMappingURL=service-worker.e065dca9.js.map\n","const CACHE_NAME = 'glypher-cache-81';\nconst version = '1.0.1';\n\nvar urlsToCache = [];\nself.addEventListener('install', function (event) {\n    // Perform install steps\n    event.waitUntil(caches.open(CACHE_NAME)\n        .then(function (cache) {\n            console.log('Opened cache');\n            return cache.addAll(urlsToCache).then(function () {\n                __hasUpdate = true;\n                console.log('All resources have been fetched and cached.');\n            });\n\n        }).then(function () {\n            // `skipWaiting()` forces the waiting ServiceWorker to become the\n            // active ServiceWorker, triggering the `onactivate` event.\n            // Together with `Clients.claim()` this allows a worker to take effect\n            // immediately in the client(s).\n            return self.skipWaiting();\n        }));\n});\nself.addEventListener('activate', function (event) {\n\n    var cacheWhitelist = [CACHE_NAME];\n    event.waitUntil(caches.keys().then(function (cacheNames) {\n        return Promise.all(cacheNames.map(function (cacheName) {\n            if (cacheWhitelist.indexOf(cacheName) === -1) {\n                return caches.delete(cacheName);\n            }\n        }));\n    }));\n});\n\n\nself.addEventListener('fetch', function (event) {\n    if (event.request.method !== 'GET') return;\n    const url = new URL(event.request.url);\n    const parts = url.pathname.split('/');\n    let fileName = parts.at(-1);\n    if (fileName ==='custom.css') {\n      event.respondWith(async function () {\n        console.warn(fileName);\n        const res = await fetch(new Request('./custom.json'));\n        const output = await res.json();\n        let response = ''\n        console.warn(output );\n        output.map((collection) => {\n            const modes = collection.modes;\n            if(collection.variables) {\n                response += collection?.variables.map((it) => {\n                    if(!it.name.includes('|')) return '';\n                    if (modes.length > 1) {\n                        return modes.map((mode) => {\n                            const modeName = mode.name;\n                            let mq = '';\n                            if (modeName.includes('max-width') || modeName.includes('min-width')) {\n                                mq = `@media only screen and (${modeName}) {`;\n                            }\n                            let val = it.values[mode.modeId];\n                            if(val.r !== undefined) {\n                                val = `rgba(${Math.round(val.r*255)},${Math.round(val.g*255)},${Math.round(val.b*255)},${val.a})`\n                            } else \n                            if(typeof val !== 'string') {\n                                val += 'px';\n                            }\n                            let selector = it.name.replace(/\\*/g, '.').split('|')[0];\n                            if (selector.indexOf('/')!== -1) {\n                                selector = selector.substr(selector.lastIndexOf('/')+1);\n                            }\n                            return `\\n ${mq}${selector} {\n                                ${it.name.split('|')[1]}: ${val} !important;\n                            }${mq? '}':''}`;\n\n                        }).join('');\n                    } else {\n\n                        let val = Object.values(it.values)[0];\n                        if(val.r !== undefined) {\n                            val = `rgba(${Math.round(val.r*255)},${Math.round(val.g*255)},${Math.round(val.b*255)},${val.a})`\n                        } else \n                        if(typeof val !== 'string') {\n                            val += 'px';\n                        }\n                            let selector = it.name.replace(/\\*/g, '.').split('|')[0];\n                            if (selector.indexOf('/')!== -1) {\n                                selector = selector.substr(selector.lastIndexOf('/')+1);\n                            }\n                        return `\\n ${selector} {\n                            ${it.name.split('|')[1]}: ${val} !important;\n                        }`;\n                    }\n                }).join('');\n            }\n        })\n        return new Response(response, {\n            headers: new Headers({\n                'Content-Type': 'text/css; charset=utf-8'\n            })\n        });\n     }());\n    }else {\n\n     event.respondWith(\n            caches.match(event.request, {ignoreSearch: true})\n                .then(function (response) {\n                        // Cache hit - return response\n                        if (response) {\n                            return response;\n                        }\n                        if (url.pathname.indexOf('worker-javascript.js') !== -1 || url.pathname.indexOf('worker-html.js') !== -1) {\n                            // request = new Request(request, {credentials: 'omit'});\n                            return fetch(new Request(event.request, {credentials: 'omit', mode: 'cors'}));\n                        }\n                        return fetch(event.request);\n                    }\n                )\n        );\n    }\n        return;\n    }\n);\n\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$336a98a23954290e$var$CACHE_NAME","$336a98a23954290e$var$urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","__hasUpdate","skipWaiting","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete","request","method","url","URL","fileName","parts","pathname","split","at","respondWith","warn","res","fetch","Request","output","json","response","collection","modes","variables","it","name","includes","length","mode","modeName","mq","val","values","modeId","undefined","r","Math","round","g","b","a","selector","replace","substr","lastIndexOf","join","Object","Response","headers","Headers","match","ignoreSearch","credentials"],"version":3,"file":"service-worker.e065dca9.js.map"}